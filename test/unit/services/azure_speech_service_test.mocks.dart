// Mocks generated by Mockito 5.4.6 from annotations
// in hordvoice/test/unit/services/azure_speech_service_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:hordvoice/services/azure_speech_phrase_hints_service.dart'
    as _i5;
import 'package:hordvoice/services/environment_config.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [EnvironmentConfig].
///
/// See the documentation for Mockito's code generation for more information.
class MockEnvironmentConfig extends _i1.Mock implements _i2.EnvironmentConfig {
  MockEnvironmentConfig() {
    _i1.throwOnMissingStub(this);
  }

  @override
  bool get isConfigured =>
      (super.noSuchMethod(Invocation.getter(#isConfigured), returnValue: false)
          as bool);

  @override
  String get azureOpenAIDeployment =>
      (super.noSuchMethod(
            Invocation.getter(#azureOpenAIDeployment),
            returnValue: _i3.dummyValue<String>(
              this,
              Invocation.getter(#azureOpenAIDeployment),
            ),
          )
          as String);

  @override
  String get azureOpenAIApiVersion =>
      (super.noSuchMethod(
            Invocation.getter(#azureOpenAIApiVersion),
            returnValue: _i3.dummyValue<String>(
              this,
              Invocation.getter(#azureOpenAIApiVersion),
            ),
          )
          as String);

  @override
  bool get debugMode =>
      (super.noSuchMethod(Invocation.getter(#debugMode), returnValue: false)
          as bool);

  @override
  String get logLevel =>
      (super.noSuchMethod(
            Invocation.getter(#logLevel),
            returnValue: _i3.dummyValue<String>(
              this,
              Invocation.getter(#logLevel),
            ),
          )
          as String);

  @override
  _i4.Future<void> loadConfig() =>
      (super.noSuchMethod(
            Invocation.method(#loadConfig, []),
            returnValue: _i4.Future<void>.value(),
            returnValueForMissingStub: _i4.Future<void>.value(),
          )
          as _i4.Future<void>);

  @override
  String? getValue(String? key) =>
      (super.noSuchMethod(Invocation.method(#getValue, [key])) as String?);

  @override
  String getValueOrDefault(String? key, String? defaultValue) =>
      (super.noSuchMethod(
            Invocation.method(#getValueOrDefault, [key, defaultValue]),
            returnValue: _i3.dummyValue<String>(
              this,
              Invocation.method(#getValueOrDefault, [key, defaultValue]),
            ),
          )
          as String);

  @override
  bool hasValidValue(String? key) =>
      (super.noSuchMethod(
            Invocation.method(#hasValidValue, [key]),
            returnValue: false,
          )
          as bool);

  @override
  List<String> validateConfiguration() =>
      (super.noSuchMethod(
            Invocation.method(#validateConfiguration, []),
            returnValue: <String>[],
          )
          as List<String>);

  @override
  void printConfigStatus() => super.noSuchMethod(
    Invocation.method(#printConfigStatus, []),
    returnValueForMissingStub: null,
  );
}

/// A class which mocks [AzureSpeechPhraseHintsService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAzureSpeechPhraseHintsService extends _i1.Mock
    implements _i5.AzureSpeechPhraseHintsService {
  MockAzureSpeechPhraseHintsService() {
    _i1.throwOnMissingStub(this);
  }
}
